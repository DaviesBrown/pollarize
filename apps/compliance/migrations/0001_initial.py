# Generated by Django 5.0.7 on 2025-08-12 13:57

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('polls', '0004_alter_bookmark_options'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='GeolocationCache',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField(db_index=True, unique=True)),
                ('country_code', models.CharField(max_length=2)),
                ('country_name', models.CharField(blank=True, max_length=100)),
                ('region', models.CharField(blank=True, max_length=100)),
                ('city', models.CharField(blank=True, max_length=100)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('provider', models.CharField(default='ipapi.co', max_length=50)),
                ('is_valid', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('expires_at', models.DateTimeField()),
            ],
            options={
                'verbose_name': 'Geolocation Cache',
                'verbose_name_plural': 'Geolocation Cache',
                'indexes': [models.Index(fields=['expires_at'], name='compliance__expires_78c86b_idx'), models.Index(fields=['country_code'], name='compliance__country_497f5c_idx')],
            },
        ),
        migrations.CreateModel(
            name='ComplianceLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ip_address', models.GenericIPAddressField()),
                ('user_agent', models.TextField(blank=True)),
                ('request_path', models.CharField(blank=True, max_length=500)),
                ('action', models.CharField(choices=[('geo_block', 'Geographic Blocking'), ('age_verify', 'Age Verification'), ('fraud_detect', 'Fraud Detection'), ('vote_limit', 'Vote Limit Exceeded'), ('region_restrict', 'Regional Restriction'), ('payment_block', 'Payment Blocking')], max_length=50)),
                ('status', models.CharField(choices=[('blocked', 'Blocked'), ('allowed', 'Allowed'), ('flagged', 'Flagged for Review')], default='blocked', max_length=20)),
                ('country_code', models.CharField(blank=True, max_length=2)),
                ('blocked_reason', models.TextField()),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('poll', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='compliance_logs', to='polls.poll')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='compliance_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Compliance Log',
                'verbose_name_plural': 'Compliance Logs',
                'ordering': ['-created_at'],
                'indexes': [models.Index(fields=['action', 'created_at'], name='compliance__action_47850e_idx'), models.Index(fields=['status', 'created_at'], name='compliance__status_4fae3c_idx'), models.Index(fields=['poll', 'action'], name='compliance__poll_id_db55a0_idx'), models.Index(fields=['country_code', 'action'], name='compliance__country_3167ae_idx'), models.Index(fields=['ip_address', 'created_at'], name='compliance__ip_addr_a04402_idx'), models.Index(fields=['user', 'action'], name='compliance__user_id_560965_idx')],
            },
        ),
        migrations.CreateModel(
            name='ComplianceRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('rule_type', models.CharField(choices=[('geo_restriction', 'Geographic Restriction'), ('age_verification', 'Age Verification'), ('payment_limit', 'Payment Limit'), ('vote_frequency', 'Vote Frequency Limit')], max_length=50)),
                ('description', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('config', models.JSONField(default=dict)),
                ('applies_to_all_polls', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('specific_polls', models.ManyToManyField(blank=True, related_name='compliance_rules', to='polls.poll')),
            ],
            options={
                'verbose_name': 'Compliance Rule',
                'verbose_name_plural': 'Compliance Rules',
                'indexes': [models.Index(fields=['rule_type', 'is_active'], name='compliance__rule_ty_ad77e8_idx'), models.Index(fields=['is_active', 'created_at'], name='compliance__is_acti_06edfb_idx')],
            },
        ),
    ]
